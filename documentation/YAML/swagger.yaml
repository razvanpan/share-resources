swagger: '2.0'
info:
  title: SharedResources API
  description: API
  version: 1.0.0
host: 'localhost:8080'
schemes:
  - http
paths:
  /api/register:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      summary: Register into application
      description: Register Form
      parameters:
        - in: body
          name: RegisterForm
          description: User that will be register in the system
          required: true
          schema:
            $ref: '#/definitions/UserToInsertDto'
      responses:
        '200':
          description: Account created successsfully
        '405':
          description: Invalid Input
          schema:
            $ref: '#/definitions/Error'
  /api/passwordRecovery:
    post:
      consumes:
        - application/json
      summary: Forget Password
      description: Recovery Form
      parameters:
        - in: body
          name: RecoveryForm
          description: User that will be helped with password recovery
          required: true
          schema:
            $ref: '#/definitions/UserRecovDto'
      responses:
        '200':
          description: Validation Mail sent!
        '404':
          description: data not found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
  /api/login:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      summary: Login into application
      description: Login Form
      parameters:
        - in: body
          name: LoginForm
          description: User that will be logged into application
          required: true
          schema:
            $ref: '#/definitions/LoginDto'
      responses:
        '200':
          description: Login Successful
          schema:
            $ref: '#/definitions/LoginResponseDto'
        '400':
          description: Invalid username/password supplied
          schema:
            $ref: '#/definitions/Error'
  /api/user/newsFeed:
    get:
      produces:
        - application/json
      summary: Get the latest news through the NewsFeed widget
      description: >
        After a successful login, the homepage will load and display the
        NewsFeed widget.
      responses:
        '200':
          description: NewsFeed and Stats content
          schema:
            type: array
            items:
              $ref: '#/definitions/NewsFeedDto'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/resource:
    get:
      produces:
        - application/json
      summary: Browse all the available Resources
      description: >
        After a accessing "Browse Resources", you will land in this page with
        all the Resources displayed.
      parameters:
        - name: idCategory
          in: query
          description: Category ID
          type: integer
        - name: name
          in: query
          description: Resource title
          type: string
      responses:
        '200':
          description: All Resources content
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceToBrowseDto'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/user/{idUser}/resource:
    get:
      produces:
        - application/json
      summary: Browse all your available Resources
      description: >
        After a accessing "My Resources", you will be able to view all your
        available Resources.
      parameters:
        - name: idUser
          in: path
          description: Resource name
          required: true
          type: string
      responses:
        '200':
          description: All MyResources content
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceOfUserDto'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/api/resource/{idResource}':
    get:
      produces:
        - application/json
      summary: Displays the current Resource's details
      description: >
        After a accessing a certain Resource, you will land in this page with
        all the Resource's details.
      parameters:
        - name: idResource
          in: path
          description: Resource name
          required: true
          type: string
      responses:
        '200':
          description: All Resource's details content
          schema:
            $ref: '#/definitions/ResourceDetailedDto'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/api/user/{idUser}':
    get:
      summary: Get the data for logged user
      description: This will load all dates of a user
      produces:
        - application/json
      parameters:
        - name: idUser
          in: path
          description: User that need to be uploaded
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: User data
          schema:
            $ref: '#/definitions/UserPersonalDetailDto'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/user/{idUser}/save:
    put:
      summary: Edit the data for a user
      description: Edit the data for a user
      consumes:
        - application/json
      produces:
        - message
      parameters:
        - name: idUser
          in: path
          description: User that need to be uploaded
          required: true
          type: integer
          format: int64
        - in: body
          name: userDto
          required: true
          schema:
            $ref: '#/definitions/UserDetailDto'
      responses:
        '200':
          description: Changes saved successsfully
        '405':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
  /api/category:
    get:
      summary: Upload all categories
      produces:
        - application/json
      responses:
        '200':
          description: Load the categories
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryDto'
  /api/resource/edit/{idResource}:
    put:
      summary: A user can upload a resource
      description: The current user upload a resource
      consumes:
        - application/json
      produces:
        - message
      parameters:
        - name: idResource
          in: path
          description: User that need to be uploaded
          required: true
          type: integer
          format: int64
        - in: body
          name: resourceDto
          required: true
          schema:
            $ref: '#definitions/ResourceToEditDto' 
      responses:
        '200':
          description: Do some black magic
        '405':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
  /api/user/{idUser}/resource/insert:
    post:
      summary: A user can upload a resource
      description: The current user upload a resource
      consumes:
        - application/json
      produces:
        - message
      parameters:
        - name: idUser
          in: path
          description: User that need to be uploaded
          required: true
          type: integer
          format: int64
        - in: body
          name: resourceDto
          required: true
          schema:
            $ref: '#definitions/ResourceToInsertDto' 
      responses:
        '200':
          description: Do some black magic
        '405':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
definitions:
  ResourceDetailedDto:
    type: object
    properties:
      idResource:
        type: string
        description: The Resource's ID
      categoryName:
        type: integer
        format: int64
        description: The Resource's Category
      title:
        type: string
        description: Resource's title
      idUser:
        type: integer
        format: int64
        description: ID of the owner of the current Resource
      type:
        type: string
        description: Physical/Digital format of the Resource
      shortDescription:
        type: string
        description: A very brief description of the Resource
      photo:
        type: array
        items:
          type: integer
          format: btye
        description: Resource's picture.
      tags:
        type: array
        description: Tags that are related to the Resource
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
  UserRecovDto:
    type: object
    properties:
      uNumber:
        type: string
        description: User's unumber.
      email:
        type: string
        description: User's email.
  ResourceOfUserDto:
    type: object
    properties:
      idResource:
        type: integer
        description: The Resource's ID
      title:
        type: string
        description: Resource's title
      type:
        type: string
        description: Physical/Digital format of the Resource
      shortDescription:
        type: string
        description: A very brief description of the Resource
      photo:
        type: array
        items:
          type: integer
          format: btye
        description: Resource's picture.
      tags:
        type: array
        description: Tags that are related to the Resource
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
  ResourceToBrowseDto:
    type: object
    properties:
      idResource:
        type: integer
        description: The Resource's ID
      title:
        type: string
        description: Resource's title
      type:
        type: string
        description: Physical/Digital format of the Resource
      fullNameUser:
        type: string
        description: User's Fullname
      idUser:
        type: integer
        description: The User's ID
      shortDescription:
        type: string
        description: A very brief description of the Resource
      categoryName:
        type: string
        description: The category's name
      photo:
        type: array
        items:
          type: integer
          format: btye
        description: Resource's picture.
      tags:
        type: array
        description: Tags that are related to the Resource
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
  ResourceToEditDto:
    type: object
    properties:
      idResource:
        type: integer
        description: The Resource's ID
      title:
        type: string
        description: Resource's title
      type:
        type: string
        description: Physical/Digital format of the Resource
      shortDescription:
        type: string
        description: A very brief description of the Resource
      idcategory:
        type: integer
        description: The Category's ID
      photo:
        type: array
        items:
          type: integer
          format: btye
        description: Resource's picture.
      tags:
        type: array
        description: Tags that are related to the Resource
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
  ResourceToInsertDto:
    type: object
    properties:
      idResource:
        type: integer
        description: The Resource's ID
      title:
        type: string
        description: Resource's title
      type:
        type: string
        description: Physical/Digital format of the Resource
      shortDescription:
        type: string
        description: A very brief description of the Resource
      idcategory:
        type: integer
        description: The Category's ID
      photo:
        type: array
        items:
          type: integer
          format: btye
        description: Resource's picture.
      tags:
        type: array
        description: Tags that are related to the Resource
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
  Tag:
    type: object
    properties:
      name:
        type: string
    xml:
      name: Tag
  NewsFeedDto:
    type: object
    properties:
      text:
        type: string
        description: Unique identifier for the activity
      userCounter:
        type: integer
        description: Unique usercount identifier
      resourceCounter:
        type: integer
        description: Unique resourcecount identifier
      otherCounter:
        type: integer
        description: Unique othercount identifier
  LoginDto:
    type: object
    properties:
      username:
        type: string
        description: User's username.
      password:
        type: string
        description: User's password.
  LoginResponseDto:
    type: object
    properties:
      token:
        type: string
        description: User's token.
      idUser:
        type: integer
        description: User's id.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
      fields:
        type: string
  UserDetailDto:
    type: object
    properties:
      idUser:
        type: integer
        format: int64
        description: User's ID
      firstName:
        type: string
        description: User's firstname.
      lastName:
        type: string
        description: User's lastname.
      email:
        type: string
        description: User's email.
      shortDescription:
        type: string
        description: User's short description.
      phone:
        type: string
        description: User's phone number.
      photo:
        type: array
        items:
          type: integer
          format: btye
        description: User's profile picture.
  UserPersonalDetailDto:
    type: object
    properties:
      idUser:
        type: integer
        format: int64
        description: User's ID
      firstName:
        type: string
        description: User's firstname.
      lastName:
        type: string
        description: User's lastname.
      username:
        type: string
        description: User's username.
      password:
        type: string
        format: password
        description: User's password.
      email:
        type: string
        description: User's email.
      shortDescription:
        type: string
        description: User's short description.
      phone:
        type: string
        description: User's phone number.
      photo:
        type: array
        items:
          type: integer
          format: btye
        description: User's profile picture.
      registerDate:
        type: string
        format: date
        description: User's registerDate.
  UserToInsertDto:
    type: object
    properties:
      firstName:
        type: string
        description: User's firstname.
      lastName:
        type: string
        description: User's lastname.
      username:
        type: string
        description: User's username.
      password:
        type: string
        format: password
        description: User's password.
      email:
        type: string
        description: User's email.
      shortDescription:
        type: string
        description: User's short description.
      phone:
        type: string
        description: User's phone number.
  CategoryDto:
    type: object
    properties:
      idCategory:
        type: integer
        format: int64
        description: Unique identifier for the category
      name:
        type: string
        description: The name of the category
